/* @group .snake */
/*csslint known-properties:false */
svg.snake {
	width:  220px;
	height: calc(100% + 25px + 70px + 25px); // 100% + snake's top + snake's bottom + margin between text and snake's bottom

	overflow: visible; /* Allow to overflow, the path's stroke may overflow */
	position: absolute;
	top:  -25px;
	left: -20px;
}

	svg.snake path {
		transition: stroke .5s, stroke-dashoffset 1.5s;

		fill: none;
		stroke: currentColor;
		stroke-dasharray: 1000 1000;
		shape-rendering: optimizeSpeed;      /* Prevent stroke's anti-aliasing */
		vector-effect:   non-scaling-stroke; /* Do not scale the stroke's width (only the path have to be scaled) */
	}

.with-snake { position: relative; }

	.with-snake:before {
		border: 4px solid $color-brand;
		content: "";
		position: absolute;
	}

	.snake-content {
		background: $color-white;
		display: block;
		position: relative;
	}

	.snake-1:before {
		width:  2em;
		height: 2em;
		left:   calc(-2em - 4px);
		bottom: calc(.25em + 4px);
	}

	.snake-1 .snake-content {
		padding-left: .25em;
		margin-left: -.25em;
	}

	.snake-2:before,
	.snake-3:before {
		width:  3em;
		height: 150%;
		min-height: 3em;
		left:   calc(-#{grid-gutter("sm")} - 4px);
		bottom: -.75em;
	}

	.snake-3 span span { display: block; }

@each $color in $colors-obsessions {
	$i: index($colors-obsessions, $color);
	.obsession-#{$i} .with-snake:before { border-color: $color; }
}

@include media("md") {
	@if grid-gutter("md") != grid-gutter("sm") {
		.snake-2:before,
		.snake-3:before { left: calc(-#{grid-gutter("md")} - 4px); }
	}
}

@include media("lg") {
	@if grid-gutter("lg") != grid-gutter("md") {
		.snake-2:before,
		.snake-3:before { left: calc(-#{grid-gutter("lg")} - 4px); }
	}
}
/* @end .snake */