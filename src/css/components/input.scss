/* @group Input */
.field {
	label {
		margin-bottom: .5em;
		display: inline-block;
		cursor: pointer;

		@extend %font-brandon;
		@include font-weight-black("brandon");
		font-size: 1.25em;
		line-height: 1.25;
	}

	input[type="email"],
	input[type="password"],
	input[type="text"] {
		background: none;

		width: 100%;
		padding: .5em 0;
		border: 0;
		border-bottom: 2px solid $color-brand-light;
		border-radius: 0; // Some user-agent have a default border-radius
		margin-bottom: 2em;

		transition: border-color .3s;
		outline: 0;

		@extend %font-proxima;
		@include font-weight-regular("proxima");
		line-height: 1.333333;

		&:active,
		&:focus { border-color: $color-brand; }

		&:disabled {
			border-color: inherit;
			cursor: not-allowed;
			color: $color-dark;
		}

		&:valid {
			background-repeat: no-repeat;
			background-position: 100% 50%;
			background-size: 1em 1.4em;
		}

		&:invalid { box-shadow: none; } // Disable default box-shadow in Firefox
		&.check:valid       { background-image: url("data:image/svg+xml;charset=UTF-8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 28 20'><path fill='#{$color-main}' d='M28 2.78L25.22 0 10.748 14.5 2.8 6.5 0 9.3 10.747 20 28 2.78z'/></svg>"); }
		&.white-check:valid { background-image: url("data:image/svg+xml;charset=UTF-8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 28 20'><path fill='white' d='M28 2.78L25.22 0 10.748 14.5 2.8 6.5 0 9.3 10.747 20 28 2.78z'/></svg>"); }
	}
}

.checkbox[type],
.radio[type] {
	@extend .sr;

	// Position the input so the browser's invalid message is correctly positionned
	bottom: 0;
	left: .75em;
}

.checkbox[type] + .checkbox,
.radio[type]    + .radio {
	box-sizing: border-box;
	width:  1.5em;
	height: 1.5em;
	border: 2px solid;
	margin-top: -.25em;

	display: inline-block;
	position: relative;
	vertical-align: middle;

	&::before {
		border:        3px solid;
		border-color:  transparent;
		border-radius: inherit;

		content: "";

		position: absolute;
		top:  50%;
		left: 50%;

		transform: translateX(-50%) translateY(-50%);
	}
}

.radio[type] + .radio { border-radius: 50%; }

.checkbox[disabled] + .checkbox,
.radio[disabled]    + .radio { color: $color-dark; }

.checkbox[type]:active  + .checkbox,
.checkbox[type]:focus   + .checkbox,
.checkbox[type]:checked + .checkbox,
.checkbox[type]:checked + .checkbox::before,
.radio[type]:active     + .radio,
.radio[type]:focus      + .radio,
.radio[type]:checked    + .radio,
.radio[type]:checked    + .radio::before { border-color: $color-brand; }

@each $device, $grid in $grids {
	@include media($device, $strict: true) {
		.field {
			input[type="email"],
			input[type="password"],
			input[type="text"] {
				&.#{$device}-check:valid       { background-image: url("data:image/svg+xml;charset=UTF-8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 28 20'><path fill='#{$color-main}' d='M28 2.78L25.22 0 10.748 14.5 2.8 6.5 0 9.3 10.747 20 28 2.78z'/></svg>"); }
				&.#{$device}-white-check:valid { background-image: url("data:image/svg+xml;charset=UTF-8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 28 20'><path fill='white' d='M28 2.78L25.22 0 10.748 14.5 2.8 6.5 0 9.3 10.747 20 28 2.78z'/></svg>"); }
			}
		}
	}
}

@include media("md") {
	.field {
		label { font-size: 1.5em; }

		input[type="email"],
		input[type="password"],
		input[type="text"] { font-size: 1.125em; }
	}
}
/* @end Input */