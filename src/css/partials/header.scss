/* @group #header */
$gutter: grid-gutter("sm");

#header-container {
	background: $color-white;
	max-width: $max-width;
}

// FIXME: temporary (also, change burger.js/menu.js)
#header-container.fixed {
	overflow: auto;
	position: fixed;
	top:    0;
	right:  0;
	bottom: 0;
	left:   0;
	z-index: 10000;
}

/*.sticky-header.sticky {
	z-index: 10000;
	position: sticky;
	top: 0;

	transform: translateY(-100%);
}

.sticky-header.animated { transition: transform .3s; }
.sticky-header.show     { transform: none; }
*/

#header {
	height: 64px;
	color: $color-brand;

	h1 {
		z-index: 1;
		a { padding: 11px; }
	}

	iframe { border: 0; }
}

#burger {
	width:  35px;
	padding: 6px 5px;

	position: absolute;
	top: 12px;
	left: 0;
	z-index: 1;

	&::before,
	> span,
	&::after {
		background: currentColor;

		width: 100%;
		height: 3px;
		margin: 6px 0;

		content: "";
		display: block;

		// Set global's animations
		animation-duration: .3s;
		animation-timing-function: ease-in-out;
		animation-direction: reverse; // By default, set as reverse since it will be used to go to the default state
		animation-fill-mode: forwards;

		transform-origin: 50%;
		transition: transform .3s;
	}

	// Use the burger-*-default animation to return to default state
	&::before { animation-name: burger-1-default; }
	& > span  { animation-name: burger-2-default; }
	&::after  { animation-name: burger-3-default; }

	// Do not add :focus, prefers the default outline
	&:hover {
		&::before { transform: translateY(2px); }
		&::after  { transform: translateY(-2px); }
	}

	&.close::before,
	&.close > span,
	&.close::after { animation-direction: normal; }

	// Use *another* animation, otherwise we won't be able to animate different states
	&.close::before { animation-name: burger-1; }
	&.close > span  { animation-name: burger-2; }
	&.close::after  { animation-name: burger-3; }

	// When there is an "initial" class, avoid animating (page load)
	&.initial::before,
	&.initial > span,
	&.initial::after  { animation-name: none; }
}

@keyframes burger-1 {
	50%  { transform: translateY(9px); }
	100% { transform: translateY(9px) rotate(45deg); }
}

@keyframes burger-2 {
	50%  { opacity: 0; }
	100% { opacity: 0; }
}

@keyframes burger-3 {
	50%  { transform: translateY(-9px); }
	100% { transform: translateY(-9px) rotate(-45deg); }
}

// As stated before, we have to use another animation name in order to animate while changing state
// For convenience, this is the same animation but played in reverse
@keyframes burger-1-default {
	50%  { transform: translateY(9px); }
	100% { transform: translateY(9px) rotate(45deg); }
}

// See burger-1-default
@keyframes burger-2-default {
	50%  { opacity: 0; }
	100% { opacity: 0; }
}

// See burger-1-default
@keyframes burger-3-default {
	50%  { transform: translateY(-9px); }
	100% { transform: translateY(-9px) rotate(-45deg); }
}

#account {
	position: absolute;
	top:   0;
	right: 0;

	line-height: 64px;
	color: $color-brand;

	svg {
		width:  initial;
		height: initial;
	}

	.login {
		display: inline-block;
		line-height: initial;

		&:focus .btn-square { border-color: inherit; }
	}
}

#menu {
	// Offset the menu so the browser will correctly jump to the menu when using an anchor
	padding-top: 64px;
	margin-top: -64px;

	display: none;
	outline: 0;

	@extend  %font-proxima;
	@include font-weight-bold("proxima");

	&:target { display: block; }

	a {
		margin: .75em 0;
		display: inline-block;
		text-transform: uppercase;

		&:hover i::before,
		&:focus i::before { transform: scale(.9); }
	}

	i {
		margin-right: .75em;

		display: inline-block;
		position: relative;

		line-height: 1;
		color: $color-white;

		&::before {
			@extend .btn-round::before;
			@extend .btn-brand::before;
		}

		svg { position: relative; }
	}

	.style-meta-larger { font-size: 1.375em; }

	.list-inline {
		i { margin: 0; }

		svg {
			width:   1em;
			height:  1em;
			padding: 1em;
		}
	}
}

@include media("md") {
	#header {
		height: 85px;

		h1 img {
			width: auto;
			height: 60px;
		}
	}

	#burger  { top: 22px; }
	#account { line-height: 85px; }

	#menu {
		padding-top: 85px;
		margin-top: -85px;
	}

	#login [role="document"] {
		box-sizing: border-box;
		width: 400px;
	}
}
/* @end #header */