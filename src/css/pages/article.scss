/* @group Article */
$margin: grid-margin("sm");
$gutter: grid-gutter("sm");

%quote {
		// Please note that the fill color have to be "white" instead of #FFF (otherwise it won't work in firefox)
	background-image: url("data:image/svg+xml;charset=UTF-8,<svg viewBox='0 0 51 56' xmlns='http://www.w3.org/2000/svg'><path fill='white' d='M18.64 54.28c1.12 1.6 1.92 1.44 2.56 1.44h2.56c1.28 0 1.76-1.28.8-2.88L9.52 27.72 24.56 3.24c.96-1.6.48-2.88-.8-2.88H21.2c-.64 0-1.44-.16-2.56 1.44L1.36 26.44c-.48.8-.64 1.92 0 2.72l17.28 25.12zm8.32-25.12l17.28 25.12c1.12 1.6 1.92 1.44 2.56 1.44h2.56c1.28 0 1.76-1.28.8-2.88L35.12 27.72 50.16 3.24c.96-1.6.48-2.88-.8-2.88H46.8c-.64 0-1.44-.16-2.56 1.44L26.96 26.44c-.48.8-.64 1.92 0 2.72z' /></svg>");
	background-position: 50% 50%;
	background-repeat: no-repeat;
	background-size: 0.7em 0.7em;
}

article header      { position: relative; }
article header img  { @include responsive; }
article header time { display: inline-block; }
article header .snake {
	border: 4px solid $color-brand;

	position: absolute;
	top:    $margin;
	right:  $margin;
	bottom: 0;
	left:   $margin;
}

article header h2 { margin-bottom: .25em; }

article header .list-inline li:after            { content: " • "; }
article header .list-inline li:last-child:after { content: "";    }

article a {
	background-image: linear-gradient(to bottom, $color-media, $color-media);
	background-position: 0 1em;
	background-repeat: no-repeat;
	background-size: 100% 100%;

	display: inline-block; /* FIXME: should stay inline, cause bugs with long links */
	transition: background-position .15s;

	@include font-weight-bold("archer");
	text-decoration: none;
	text-transform: uppercase;
	line-height: 1.5;
	color: $color-main;
}

article a:hover,
article a:focus { background-position: 0 0; }

article abbr {}
article aside {}

	article aside p {
		@extend .h2;
		font-size: 1.875em;
		@include font-weight-bold("brandon");
		margin: 0;
	}

	article aside span { font-size: 1.4em; }

// Archer's bold is actually bolder than the default "bold" (its font-weights seems wrong)
article b,
article strong { @include font-weight-bold("archer"); }

article blockquote { position: relative; }

	article blockquote:before {
		background-color: $color-brand;
		@extend %quote;

		width:  2.5em;
		height: 2.5em;
		border-radius: 50%;

		content: "";

		z-index: -1;
		position: absolute;
		top:  -.75em;
		left: #{-$margin / 2};

		font-size: 1.85em;
	}

	article blockquote p {
		padding-left: 1.25em;
		margin-bottom: .125em;

		@extend %font-brandon;
		@include font-weight-light("brandon");
		font-size: 1.85em;
		line-height: 1.15;
	}

	article blockquote p:last-of-type:after { content: " »"; }

	article blockquote footer {
		padding-left: 3em;
		@extend .style-meta;
	}

article dl,
article dt,
article dfn,
article dd {}

article figure {}

	article figcaption {
		@extend .snake-2;
		@extend .style-meta;
		margin-top: .75em;
		color: inherit;
		line-height: inherit;
	}

	article figcaption:before {
		height: auto;
		top: -30px;
	}

	article figcaption > span { @extend .snake-container; }

article h3 { @extend .h3; }
article h4 { @extend .h4; }
article h5 { @extend .h5; }
article h6 { @extend .h6; }

article h3,
article h4,
article h5,
article h6 { margin-bottom: 0.5em; }

article i,
article em { font-style: italic; }

article q:before { content: "« "; }
article q:after  { content: " »"; }

article table {}
	article caption {}
	article thead {}
	article tfoot {}
	article tbody {}
		article tr {}
			article th {}
			article td {}

article .dialogue {}
	article .dialogue p:before     { content: "— "; }
	article .dialogue p:last-child { margin-bottom: 0; }
article .glossary {}

	article .glossary h3  { font-size:  inherit; }
	article .glossary dfn { font-style: inherit; }

	article .glossary dt,
	article .glossary dd {
		margin-bottom: 1em; // FIXME: not working since display is inline
		display: inline;
	}

	article .glossary dt { @include font-weight-bold("archer"); }

	article .glossary dt:before {
		content: "";
		display: table;
	}

	article .glossary dfn:before { content: "• ";  }
	article .glossary dfn:after  { content: " : "; }

	article .glossary ol li {
		margin-bottom: 1em;
		counter-increment: notes;
	}

	article .glossary :target { background: $color-media; }

	article .glossary ol li:before {
		@include font-weight-bold("archer");
		content: "[" counter(notes) "] ";
	}

article .notes {}

	article .notes h3 { font-size: inherit;   }
	article .notes ol { counter-reset: notes; }

	article .notes ol li {
		margin-bottom: 1em;
		counter-increment: notes;
	}

	article .notes :target { background: $color-media; }

	article .notes ol li:before {
		@include font-weight-bold("archer");
		content: "[" counter(notes) "] ";
	}

article .interview {
	margin-top:    .5em;
	margin-bottom: .75em;
}

	article .question {
		@include font-weight-bold("archer");
		font-variant: small-caps;
		margin: 1.5em 0 .75em;
	}

	article .question:before {
		content: "• ";
		color: $color-brand;
	}

	article .answer { margin-bottom: .75em; }

article .lettrine {
	background-color: $color-brand;

	width: 1.6em;
	line-height: 1.6em;
	border-radius: 50%;
	margin: -.25em .15em 0 0;

	float: left;
	display: inline-block;

	@extend %font-brandon;
	font-size: 3.75rem;
	@include font-weight-regular("brandon");

	text-align: center;

	color: $color-white;
}

article .lettrine::selection { background: transparent; }

article .lettrine.with-quote {
	@extend %quote;
	background-size: .25em .25em;
	background-position: .1875em 50%;
}

// Consider every child of .article-container as a column
.article-container > * { @extend .col; }

.article-container a {
	background-position: 0 1.0625em;
	text-transform: inherit;
	line-height: 1.5;
}

.article-container > p { line-height: 1.75; }

.article-container > p:last-of-type:after {
	background-image: url("data:image/svg+xml;charset=UTF-8,<svg viewBox='0 0 78 78' xmlns='http://www.w3.org/2000/svg'><path fill='#C83E2C' fill-rule='evenodd' d='M39 78c21.54 0 39-17.46 39-39S60.54 0 39 0 0 17.46 0 39s17.46 39 39 39zm.7-10.2c-3.4 0-7.4-2.3-7.4-8.6v-1.7c0-.7.6-1.3 1.3-1.3h.9c.7 0 1.3.6 1.3 1.3v1.9c0 .9.2 5.1 4.1 5.1 2.4 0 4-2.2 4-5.5V37.8c0-.4-.3-.8-.8-.8h-10c-.7 0-1.3-.6-1.3-1.3V13c0-.7.6-1.3 1.3-1.3h.9c.7 0 1.3.6 1.3 1.3v20.1c0 .4.3.8.8.8h10.1c.7 0 1.3.6 1.3 1.3v24.2c-.1 5.8-4 8.4-7.8 8.4z'/></svg>");

	width:  1em;
	height: 1em;
	margin-left: .5em;

	content: "";
	display: inline-block;

	vertical-align: middle;
}

.article-container > aside,
.article-container > blockquote,
.article-container > div,
.article-container > dl,
.article-container > figure,
.article-container > table,
.article-container > ol,
.article-container > p,
.article-container > ul,
.article-container > .glossary,
.article-container > .notes {
	margin-top:    1.5em;
	margin-bottom: 1.5em;
}

.article-container ul,
.article-container ol {}
.article-container li {}

article > footer {
	background: url("data:image/svg+xml;charset=UTF-8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2 4'><path fill='rgba(0, 0, 0, .2)' d='M1 0h1v1H1zM0 2h1v1H0z'/></svg>");
	background-size: 2px 4px;
}

	article > footer .container {
		padding-right: $margin;
		padding-left:  $margin;
	}

	article > footer .row { background: $color-white; }
	article > footer li   { margin-bottom: 1em; }
	article .tags a { background-image: linear-gradient(to bottom, $color-external, $color-external); }

@each $color in $colors-obsessions {
	$i: index($colors-obsessions, $color);
	article.obsession-#{$i} a.obsession { background-image: linear-gradient(to bottom, $color, $color); }
	article.obsession-#{$i} .snake      { border-color: $color; }

	article.obsession-#{$i} blockquote:before { background-color: rgba($color, .75); }
	article.obsession-#{$i} .lettrine         { background-color: $color; }

	article.obsession-#{$i} aside span,
	article.obsession-#{$i} .question:before { color: $color; }
}

@include media("md") {
	$margin: grid-margin("md");
	$gutter: grid-gutter("md");

	article header .snake {
		top:   0;
		right: 0;
		left:  -4px; // Offset the border
	}

	article .lettrine { margin-left: -.5em; }

	.article-container > * { @extend .col-md-left-1; }
	.article-container > * { @extend .col-md-5; }

	.article-container > .glossary,
	.article-container > .notes { font-size: 0.8125em; }

	// We need to add some extra selectors since .article-container > * have an higher score than most of the classes
	.article-container .col-md-left-0 { @extend .col-md-left-0; }

	// We don't need to go through all the columns, we can stop before the "default" size
	@for $i from 1 through 4 {
		.article-container .col-md-#{$i} { @extend .col-md-#{$i}; }
	}

	// For columns having the "full" class, remove the margin and expand
	.article-container > .full { @extend .col-md-left-0; }
	.article-container > .full { @extend .col-md-8; }
	.article-container > .full figcaption { @extend .col-md-left-1; }

	@if $margin != grid-margin("sm") {
		article blockquote:before { left: #{-$margin / 2}; }

		article > footer .container {
			padding-right: $margin;
			padding-left:  $margin;
		}
	}

	@if $gutter != grid-gutter("sm") {
		article figure .snake { left: #{-$gutter}; }
	}
}

@include media("lg") {
	$margin: grid-margin("lg");
	$gutter: grid-gutter("lg");

	.article-container > * { @extend .col-lg-left-2; }
	.article-container > * { @extend .col-lg-6; }

	// We need to add some extra selectors since .article-container > * have an higher score than most of the classes
	@for $i from 0 through 1 {
		.article-container .col-lg-left-#{$i} { @extend .col-lg-left-#{$i}; }
	}

	// We don't need to go through all the columns, we can stop before the "default" size
	@for $i from 1 through 5 {
		.article-container .col-lg-#{$i} { @extend .col-lg-#{$i}; }
	}

	// For columns having the "full" class, remove the margin and expand
	.article-container > .full { @extend .col-lg-left-0; }
	.article-container > .full { @extend .col-lg-12; }
	.article-container > .full figcaption { @extend .col-lg-left-2; }

	@if $margin != grid-margin("md") {
		article blockquote:before { left: #{-$margin / 2}; }

		article > footer .container {
			padding-right: $margin;
			padding-left:  $margin;
		}
	}

	@if $gutter != grid-gutter("md") {
		article figure .snake { left: #{-$gutter}; }
	}
}
/* @end Article */