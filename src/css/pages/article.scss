/* @group Article */
$margin: grid-margin("sm");
$gutter: grid-gutter("sm");

%quote {
	// Please note that the fill color have to be "white" instead of #FFF (otherwise it won't work in firefox)
	background-image: url("data:image/svg+xml;charset=UTF-8,<svg viewBox='0 0 51 56' xmlns='http://www.w3.org/2000/svg'><path fill='white' d='M18.64 54.28c1.12 1.6 1.92 1.44 2.56 1.44h2.56c1.28 0 1.76-1.28.8-2.88L9.52 27.72 24.56 3.24c.96-1.6.48-2.88-.8-2.88H21.2c-.64 0-1.44-.16-2.56 1.44L1.36 26.44c-.48.8-.64 1.92 0 2.72l17.28 25.12zm8.32-25.12l17.28 25.12c1.12 1.6 1.92 1.44 2.56 1.44h2.56c1.28 0 1.76-1.28.8-2.88L35.12 27.72 50.16 3.24c.96-1.6.48-2.88-.8-2.88H46.8c-.64 0-1.44-.16-2.56 1.44L26.96 26.44c-.48.8-.64 1.92 0 2.72z' /></svg>");
	background-repeat: no-repeat;
}

article header { position: relative; } // Used to position the .snake

	article header img  {
		@include responsive;
		max-height: 615px;
	}

	// On mobile, the snake is stuck to the margins
	article header .snake {
		top:    $margin;
		right:  $margin;
		bottom: -4px; // Offset the border
		left:   $margin;
	}

	article header .h2  { margin-bottom: .5em; }
	article header time { display: inline-block; }

article a       { @extend %link; }
article a:hover,
article a:focus { @extend %link-active; }

article abbr  {}



article dl,
article dt,
article dfn,
article dd {}

		&:hover,
		&:focus { @extend %link-active; }
	}


article h3 { @extend .h4; }
article h4 { @extend .h5; }
article h5 { @extend .h6; }

article h3,
article h4,
article h5 { margin-bottom: 0; }


article table {}
	article caption {}
	article thead {}
	article tfoot {}
	article tbody {}
		article tr {}
			article th {}
			article td {}


// FIXME: article-container or global?
a[href^="#note"]:after { content: "*"; }

}


	h3,
	h4,
	h5 { margin-bottom: 0; }

}


article .mini {
	position: absolute;
	right: 0;

	@extend %font-proxima;
	font-size: .875em;

	opacity: 0;
	transition: opacity .6s, transform .6s;
	transform: translateX(100%);

	color: $color-black;
}

article .mini.show {
	opacity: 1;
	transform: none;
}

	article .mini a { display: block; }

	article .mini.active a,
	article .mini a:hover,
	article .mini a:focus { color: $color-media; }

		article .mini .image {
			width:  80px;
			height: 80px;
			padding: 8px;
			border-radius: 50%;

			display: block;
			font-size: inherit;
		}

		article .mini .image,
		article .mini .player { margin: 0 auto .5em; }

		article .mini.active .image,
		article .mini a:hover .image,
		article .mini a:focus .image { background: $color-media; }

			article .mini .image img {
				box-sizing: border-box;
				height: 100%;
				border: 6px solid $color-white;
				border-radius: 50%;
			}

		article .mini p,
		article .mini figcaption,
		article .mini .more {
			margin-left: calc((100% - 80px) / 2);
			margin-bottom: 0;
			font: inherit;
		}

		article .mini .title {
			@include font-weight-bold("proxima");
			text-transform: uppercase;
		}

		article .mini .subtitle {
			@include font-weight-semi-bold("proxima");
			color: $color-dark;
		}

		article .mini.active .subtitle,
		article .mini a:hover .subtitle,
		article .mini a:focus .subtitle { color: inherit; }

		article .mini figcaption,
		article .mini .caption {
			padding-top: .75em;
			border-top: 1px solid $color-dark;
			margin-top: .75em;

			@include font-weight-regular("proxima");
			font-size:  1em;
			font-style: italic;
		}

		article .mini figcaption:before { content: none; }

		article .mini[id^="note"] .title {
			background: url("data:image/svg+xml;charset=UTF-8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 19 19'><path fill='rgb(243,223,147)' d='M15.834 10.3c2.064-.096 3.456-1.296 2.832-3.168-.528-1.632-2.4-1.872-4.08-.768l-4.416 2.88 1.392-5.136C12.09 2.188 11.466.46 9.498.46S6.906 2.188 7.434 4.108l1.392 5.136-4.416-2.88C2.73 5.26.858 5.5.33 7.132c-.624 1.872.768 3.072 2.832 3.168l5.328.288-4.128 3.264c-1.584 1.248-2.064 3.12-.48 4.224s3.12.144 3.84-1.776l1.776-4.752 1.776 4.752c.72 1.92 2.256 2.88 3.84 1.776 1.584-1.104 1.104-2.976-.48-4.224l-4.128-3.264 5.328-.288z' /></svg>") no-repeat 0 0/19px 19px;
			padding-top: 30px;
			margin-top: 0;
		}

		article .mini[id^="note"] .more { display: inline; }

		article .mini[id^="note"] .more::after {
			background: url("data:image/svg+xml;charset=UTF-8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'><path fill='rgb(243,223,147)' fill-rule='evenodd' d='M6.5 6.5H4v3h2.5V12h3V9.5H12v-3H9.5V4h-3v2.5zM8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8z' /></svg>") no-repeat;

			width:  1em;
			height: 1em;
			margin-top: -1px;
			margin-left: .25em;

			content: "";
			display: inline-block;

			vertical-align: middle;
		}

article .share { margin-bottom: 1.5em; }

	article .share li {
		margin-left:  1em;
		margin-right: 1em;
		display: inline-block;
	}

		article .share svg {
			width:  2em;
			height: 2em;
		}

// Consider every child of .article-container as a column
.article-container > * { @extend .col; }

.article-container a {
	background-position: 0 1.075em;
	text-transform: inherit;
}

.article-container > p { line-height: 1.75; }

.article-container > p:last-of-type:after {
	// Please note that the fill color have to be in RGB instead of hexadecimal (otherwise it won't work in firefox)
	background: url("data:image/svg+xml;charset=UTF-8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 64 64'><path fill='rgb(200, 62, 44)' d='M32 64c17.674 0 32-14.326 32-32S49.674 0 32 0 0 14.326 0 32s14.326 32 32 32zm.54-9c-2.814 0-6.126-1.886-6.126-7.052v-1.394c0-.574.497-1.066 1.076-1.066h.746c.58 0 1.076.492 1.076 1.066v1.558c0 .738.166 4.182 3.395 4.182 1.987 0 3.312-1.804 3.312-4.51V30.4c0-.327-.25-.655-.67-.655h-8.28c-.58 0-1.08-.492-1.08-1.066V10.06c0-.568.5-1.06 1.08-1.06h.74c.58 0 1.08.492 1.08 1.066v16.48c0 .33.24.657.66.657h8.36c.58 0 1.07.492 1.07 1.066v19.84C38.9 52.86 35.67 55 32.52 55z'/></svg>") no-repeat;

	width:  1em;
	height: 1em;
	margin-left: .25em;

	content: "";
	display: inline-block;

	vertical-align: middle;
}

.article-container > aside,
.article-container > blockquote,
.article-container > figure,
.article-container > table,
.article-container > ol,
.article-container > p,
.article-container > ul {
	margin-top:    1.5em;
	margin-bottom: 1.5em;
}

	.article-container .mini { margin: 0; }
	.article-container .share li:before { content: none; }

	article > footer { padding-bottom: $margin; }

		article .meta {
			padding-right: $margin;
			padding-left:  $margin;
		}

			article .meta .row    { background: $color-white; }
			article .meta p       { margin: 0 1em 1em 0; }
			article .meta li      { margin-bottom: 1em; }
			article .meta a       { margin-left: .25em; }
			article .meta .tags a { margin-left: 0; }
			article .meta .tags a { background-image: linear-gradient(to bottom, $color-external, $color-external); }

		article .rel { background: $color-white; }
			article .rel li { display: inline-flex; }

				article .rel a {
					padding: 1em 0;
					flex: 1; // Grow so it will use 100% of the parent's height
					position: relative;
				}

				article .rel a,
				article .rel span { display: block; }

				article .rel i {
					margin-top:  -.5em;
					position: absolute;
					top: 50%;
					left: #{-$margin};

					font-size: 3em;
					color: $color-brand;
				}

				article .rel a[rel="next"] i {
					right: #{-$margin};
					left: auto;
				}

					article .rel i svg {
						width:  1em;
						height: 1em;
						display: block;
						position: relative;
					}

				article .rel a[rel="prev"] div { margin-left:  $gutter * 2; }
				article .rel a[rel="next"] div { margin-right: $gutter * 2; }

					article .rel .style-meta {
						font-size: .9375em;
						@include font-weight-semi-bold("proxima");
						line-height: 1.666667;
					}

					article .rel .h5 { margin: 0; }

@each $colors in $colors-obsessions {
	$i:     index($colors-obsessions, $colors);
	$main:  map-get($colors, "main");
	$light: map-get($colors, "light");
	article.obsession-#{$i} a.obsession { background-image: linear-gradient(to bottom, $light, $light); }

	article.obsession-#{$i} .snake,
	article.obsession-#{$i} figcaption:before { border-color: $main; }

}

@include media("sm", true) {
	article .mini { display: none; }
}

@include media("md") {
	$margin: grid-margin("md");
	$gutter: grid-gutter("md");

	// On tablet and after, the snake is stuck to the column
	article header .snake {
		top:   0;
		right: 0;
		left:  -4px; // Offset the border
	}

	article .share {
		@include fadable;
		position: absolute;
		top:    185px;
		bottom: 0;
		left:   0;
	}

	article .share.show { @include fadable-active; }

		article .share ul {
			margin: 1.5em 0;
			position: sticky;
			top: 1.5em;
		}

			article .share li {
				margin-left:  0;
				margin-right: 0;
				display: block;
			}

	.article-container > * { @extend .md-ml-1c; }
	.article-container > * { @extend .md-w-5c; }

	.article-container a { background-position: 0 1.0625em; }

	.article-container > p,
	.article-container > ul,
	.article-container > ol,
	.article-container > .interview,
	.article-container > .dialogue { font-size: 1.125em; }

	.article-container .mini { margin-bottom: $gutter; }

	// We need to add some extra selectors since .article-container > * have an higher score than most of the classes
	.article-container .md-ml-0 { @extend .md-ml-0; }

	// We don't need to go through all the columns, we can stop before the "default" size
	@for $i from 1 through 4 {
		.article-container .md-w-#{$i}c { @extend .md-w-#{$i}c; }
	}

	// For columns having the "full" class, remove the margin and expand
	.article-container > .full { @extend .md-ml-0; }
	.article-container > .full { @extend .md-w-8c; }
	.article-container > .full figcaption { @extend .md-ml-1c; }

	article .rel i {
		margin-left: -.5em;
		left: 12.5%; // Half the total size
		color: $color-white;
	}

	article .rel a[rel="next"] i {
		margin-left: 0;
		margin-right: -.5em;
		right: 12.5%;
	}

		// Same as .btn-round:before (cannot extend since it is in a media query)
		article .rel i:before {
			background: $color-brand;

			width:  100%;
			height: 100%;
			border-radius: 50%;

			display: block;
			content: "";
			position: absolute;

			transition: transform .3s;
			backface-visibility: hidden;
		}

		article .rel a:hover i:before,
		article .rel a:focus i:before { transform: scale(0.9); }

	article .rel a[rel="prev"] div { margin-left:  25%; }
	article .rel a[rel="next"] div { margin-right: 25%; }

	@if $margin != grid-margin("sm") {
		article > footer { padding-bottom: $margin; }
		article .meta {
			padding-right: $margin;
			padding-left:  $margin;
		}
	}

	@if $gutter != grid-gutter("sm") {
		article figure .snake { left: #{-$gutter}; }
	}
}

@include media("lg") {
	$margin: grid-margin("lg");
	$gutter: grid-gutter("lg");

	article .mini .image,
	article .mini .player { float: left; }

	article .mini .title,
	article .mini .subtitle,
	article .mini .caption,
	article .mini figcaption {
		width: calc(100% - 96px - 1em);
		margin-left: 0;

		float: right;
	}

	article .mini .title { margin-top: 30px; }

	article .mini[id^="note"] p,
	article .mini[id^="note"] a {
		width: auto;
		margin-right: $gutter / 2;
		margin-left:  $gutter / 2;
		float: none;
	}

	.article-container > * { @extend .lg-ml-2c; }
	.article-container > * { @extend .lg-w-6c; }

	// We need to add some extra selectors since .article-container > * have an higher score than most of the classes
	.article-container .lg-ml-0  { @extend .lg-ml-0;  }
	.article-container .lg-ml-1c { @extend .lg-ml-1c; }

	// We don't need to go through all the columns, we can stop before the "default" size
	@for $i from 1 through 5 {
		.article-container .lg-w-#{$i}c { @extend .lg-w-#{$i}c; }
	}

	// For columns having the "full" class, remove the margin and expand
	.article-container > .full { @extend .lg-ml-0; }
	.article-container > .full { @extend .lg-w-12c; }
	.article-container > .full figcaption { @extend .lg-ml-2c; }

	article .meta p,
	article .meta ul,
	article .meta li { display: inline-block; }

	article .meta p,
	article .meta li { margin-right: 1.5em; }

	@if $margin != grid-margin("md") {
		article > footer { padding-bottom: $margin; }
		article .meta {
			padding-right: $margin;
			padding-left:  $margin;
		}
	}

	@if $gutter != grid-gutter("md") {
		article figure .snake { left: #{-$gutter}; }
		.article-container .mini { margin-bottom: $gutter; }
	}
}
/* @end Article */