/* @group Board */
$gutter: grid-gutter("sm");

/* WIP */
[role="tab"][aria-selected="true"] { color: $color-darker; }
[role="tabpanel"][aria-hidden="true"] { display: none; }

[role="tablist"] li {
	width: (100% / 8);
	height: 85px;
	text-align: center;
}
[role="tab"] {
	display: block;
	text-decoration: none;
	color: $color-brand;
}
[role="tab"]:before {
	display: block;
	content: "‚óè";
	color: #F1CFCA; // FIXME
}

[role="tab"][aria-selected="true"]:before {
	color: $color-brand;
}

[role="tab"] span { display: none; }

@include media("lg") {
	.txt li { width: 50%; }
}
.txt li p { margin-bottom: .5em; }
.txt .snake-1:before {
	width:  1.5em;
	height: 1.5em;
	left: calc(-1.5em - 4px);
}
.txt .link-unstyled:hover,
.txt .link-unstyled:focus,
.txt .link-unstyled:hover .style-meta,
.txt .link-unstyled:focus .style-meta {
	color: $color-media;
}
/* end WIP */

.tab-title { margin-bottom: .75em; }

.mosaic li { overflow: hidden; }

	.mosaic a {
		display: block;
		position: relative;
		color: currentColor;
	}

		// Prepare the overlay's offsets (will be re-used)
		$padding-top:    $gutter * 1.5;
		$padding-right:  $gutter;
		$padding-bottom: $gutter * 4;
		$padding-left:   $gutter;

		.mosaic .overlay {
			@extend %fadable;
			background-color: rgba($color-media, .9);
			padding: $padding-top $padding-right $padding-bottom $padding-left;
		}

		.mosaic a:hover .overlay,
		.mosaic a:focus .overlay { @extend %fadable-active }

			.mosaic .snake-3        { margin-left: $gutter; }
			.mosaic .snake-3:before { border-color: $color-white; }

			/* Fix the background position by setting the .snake-3's offset (padding-left + margin-left and padding-top) */
			.mosaic .snake-3 .snake-container,
			.mosaic .snake-3 .snake-wrapper { background-position: #{-($padding-left + $gutter)} #{-$padding-top}; }

			/* Fix the background size by calculating the snake-3's parent's width (100% + offset left + offset right) */
			.mosaic .snake-3 .snake-container { background-size: calc(100% + #{$padding-left + $gutter + $padding-right}); }
			.mosaic .snake-3 .snake-wrapper   { background-color: rgba($color-media, .9); }

			.mosaic .title    { margin-bottom: 0; }
			.mosaic .subtitle { text-transform: uppercase; }

		.mosaic .desc {
			@extend %font-proxima;
			@include font-weight-semi-bold("proxima");
			line-height: 1.625;
		}

		.mosaic .more {
			position: absolute;
			right:  0;
			bottom: 0;
			left:   0;
		}

@include media("md") {
	$gutter: grid-gutter("md");

	.mosaic li { width: 50%; }

	@if $gutter != grid-gutter("sm") {
		// Prepare the offsets (will be re-used)
		$padding-top:    $gutter * 1.5;
		$padding-right:  $gutter;
		$padding-bottom: $gutter * 4;
		$padding-left:   $gutter;

		.mosaic .overlay { padding: $padding-top $padding-right $padding-bottom $padding-left; }
		.mosaic .snake-3 { margin-left: $gutter; }

		/* Fix the background position by setting the .snake-3's offset (padding-left + margin-left and padding-top) */
		.mosaic .snake-3 .snake-container,
		.mosaic .snake-3 .snake-wrapper { background-position: #{-($padding-left + $gutter)} #{-$padding-top}; }

		/* Fix the background size by calculating the snake-3's parent's width (100% + offset left + offset right) */
		.mosaic .snake-3 .snake-container { background-size: calc(100% + #{$padding-left + $gutter + $padding-right}); }
	}
}

@include media("lg") {
	$gutter: grid-gutter("lg");

	.mosaic li { width: 33.333333%; }

	@if $gutter != grid-gutter("md") {
		// Prepare the offsets (will be re-used)
		$padding-top:    $gutter * 1.5;
		$padding-right:  $gutter;
		$padding-bottom: $gutter * 4;
		$padding-left:   $gutter * 2;

		.mosaic .overlay { padding: $padding-top $padding-right $padding-bottom $padding-left; }
		.mosaic .snake-3 { margin-left: $gutter; }

		/* Fix the background position by setting the .snake-3's offset (padding-left + margin-left and padding-top) */
		.mosaic .snake-3 .snake-container,
		.mosaic .snake-3 .snake-wrapper { background-position: #{-($padding-left + $gutter)} #{-$padding-top}; }

		/* Fix the background size by calculating the snake-3's parent's width (100% + offset left + offset right) */
		.mosaic .snake-3 .snake-container { background-size: calc(100% + #{$padding-left + $gutter + $padding-right}); }
	}
}
/* @end Board */