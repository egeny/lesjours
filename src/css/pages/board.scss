/* @group Board */
$gutter: grid-gutter("sm");

.board {}

	.board .wall img { max-height: 415px; }

	.board [role="tablist"] {
		background: $color-white;
		height: 64px; // Header's height on small devices
	}

	// Fix the z-index so it will be below the main header
	.board [role="tablist"].sticky { z-index: 10001; }

		.board [role="tablist"] li {
			width: (100% / 8); // There is 7 tabs, plus one for the margin-left
			height: 100%;
			vertical-align: top;
		}

			.board [role="tab"] {
				box-sizing: border-box;
				height: 100%;
				padding-top: 10px;

				display: block;

				text-decoration: none;
				color: $color-brand-light;
			}

			.board [role="tab"]:before {
				content: "●";
				display: block;
				line-height: 1.75;
			}

			.board [role="tab"]:hover,
			.board [role="tab"]:focus { color: $color-brand; }
			.board [role="tab"]:focus { outline: 0; }

			.board [role="tab"][aria-selected="true"] { color: $color-brand; }

			.board [role="tab"] span {
				margin-top: 1em;
				display: none; // Is displayed only on large devices
				@extend %font-proxima;
				@include font-weight-bold("proxima");
				font-size: 0.625em;
				text-transform: uppercase;
			}

.quick-links li { margin-right: 1em; }

.mosaic li { padding: $gutter / 2; }

	.mosaic a {
		display: block;
		overflow: hidden;
		position: relative;
		color: currentColor;
	}

		// Prepare the overlay's offsets (will be re-used)
		$padding-top:    $gutter * 1.5;
		$padding-right:  $gutter;
		$padding-bottom: $gutter * 4;
		$padding-left:   $gutter;

		.mosaic .overlay {
			@extend %fadable;
			background-color: rgba($color-media, .9);
			padding: $padding-top $padding-right $padding-bottom $padding-left;
		}

		.mosaic .overlay.no-content { padding: 0; }

		.mosaic .snake {
			border-color: #FFF;
			top:    $gutter;
			right:  $gutter;
			bottom: $gutter;
			left:   $gutter;
		}

		.mosaic a:hover .overlay,
		.mosaic a:focus .overlay { @extend %fadable-active }

			.mosaic .snake-3        { margin-left: $gutter; }
			.mosaic .snake-3:before { border-color: $color-white; }

			/* Fix the background position by setting the .snake-3's offset (padding-left + margin-left and padding-top) */
			.mosaic .snake-3 .snake-container,
			.mosaic .snake-3 .snake-wrapper { background-position: #{-($padding-left + $gutter)} #{-$padding-top}; }

			/* Fix the background size by calculating the snake-3's parent's width (100% + offset left + offset right) */
			.mosaic .snake-3 .snake-container { background-size: calc(100% + #{$padding-left + $gutter + $padding-right}); }
			.mosaic .snake-3 .snake-wrapper   { background-color: rgba($color-media, .9); }

			.mosaic .title    { margin-bottom: 0; }
			.mosaic .subtitle { text-transform: uppercase; }

		.mosaic .desc {
			@extend %font-proxima;
			@include font-weight-semi-bold("proxima");
			line-height: 1.625;
		}

		.mosaic .more {
			position: absolute;
			right:  0;
			bottom: 0;
			left:   0;
		}

.articles .link-unstyled { display: block; }
.articles .link-unstyled:hover,
.articles .link-unstyled:focus,
.articles .link-unstyled:hover .style-meta,
.articles .link-unstyled:focus .style-meta { color: $color-media; }

.articles .h5 { margin-bottom: .25em; }
.articles p   { margin-bottom: .5em; }

.articles .snake-1:before {
	width:  $gutter *  2;
	height: $gutter *  2;
	left:   $gutter * -2;
}

@include media("md") {
	$gutter: grid-gutter("md");

	// Header's height on medium and large devices
	.board [role="tablist"] { height: 85px; }

	.quick-links li { margin-right: 3em; }

	.mosaic li     { width: 50%; }
	.mosaic .minor { width: calc(33.333333% + #{$gutter}); }

	.articles .snake-1:before {
		width:  $gutter *  1.5;
		height: $gutter *  1.5;
		left:   $gutter * -1.5;
	}

	@if $gutter != grid-gutter("sm") {
		.mosaic li { padding: $gutter / 2; }

		.mosaic .snake {
			top:    $gutter;
			right:  $gutter;
			bottom: $gutter;
			left:   $gutter;
		}

		// Prepare the offsets (will be re-used)
		$padding-top:    $gutter * 1.5;
		$padding-right:  $gutter;
		$padding-bottom: $gutter * 4;
		$padding-left:   $gutter;

		.mosaic .overlay { padding: $padding-top $padding-right $padding-bottom $padding-left; }
		.mosaic .snake-3 { margin-left: $gutter; }

		/* Fix the background position by setting the .snake-3's offset (padding-left + margin-left and padding-top) */
		.mosaic .snake-3 .snake-container,
		.mosaic .snake-3 .snake-wrapper { background-position: #{-($padding-left + $gutter)} #{-$padding-top}; }

		/* Fix the background size by calculating the snake-3's parent's width (100% + offset left + offset right) */
		.mosaic .snake-3 .snake-container { background-size: calc(100% + #{$padding-left + $gutter + $padding-right}); }
	}
}

@include media("lg") {
	$gutter: grid-gutter("lg");

	.board [role="tab"] span { display: block; }

	.mosaic li     { width: 33.333333%; }
	.mosaic .minor { width: 20%; }

	.articles li { width: 50%; }

	@if $gutter != grid-gutter("md") {
		.mosaic li { padding: $gutter / 2; }

		.mosaic .snake {
			top:    $gutter;
			right:  $gutter;
			bottom: $gutter;
			left:   $gutter;
		}

		// Prepare the offsets (will be re-used)
		$padding-top:    $gutter * 1.5;
		$padding-right:  $gutter;
		$padding-bottom: $gutter * 4;
		$padding-left:   $gutter * 2;

		.mosaic .overlay { padding: $padding-top $padding-right $padding-bottom $padding-left; }
		.mosaic .snake-3 { margin-left: $gutter; }

		/* Fix the background position by setting the .snake-3's offset (padding-left + margin-left and padding-top) */
		.mosaic .snake-3 .snake-container,
		.mosaic .snake-3 .snake-wrapper { background-position: #{-($padding-left + $gutter)} #{-$padding-top}; }

		/* Fix the background size by calculating the snake-3's parent's width (100% + offset left + offset right) */
		.mosaic .snake-3 .snake-container { background-size: calc(100% + #{$padding-left + $gutter + $padding-right}); }

		.articles .snake-1:before {
			width:  $gutter *  1.5;
			height: $gutter *  1.5;
			left:   $gutter * -1.5;
		}
	}
}

/* FIXME: clean me */
.f1 .h4 { margin-left: 35px; margin-bottom: 25px; }
.f1 .snake-2:before { width: 36px; }
.f1 .intro { margin-bottom: 14px; @include font-weight-bold("archer"); }
.f1 .style-meta { margin-bottom: 14px; }

.previous .pattern-1 { height: $gutter; }
.f3 a:hover .h5,
.f3 a:hover p { color: $color-brand; }
.f3 .h5 { margin-bottom: 14px; }
.f3 p { margin-bottom: 14px; }
.f3 li { margin-bottom: 30px; }
.f3 .style-meta { line-height: 1; }

@include media("md") {
	$gutter: grid-gutter("md");
	.f1 .h4 { margin-left: 0; margin-bottom: 45px; }
	.f1 .snake-2:before { width: 59px; }
	.f1 .style-meta { display: inline; line-height: 1; }
	.f1 ul.style-meta { line-height: 1; margin-left: 10px; border-left: 1px solid $color-dark; padding-left: 10px;}
	.f1 ul.style-meta:after { display: table; content: ""; }
	.f1 .style-meta li { display: inline; }
	.f1 .style-meta li:after            { content: " • "; }
	.f1 .style-meta li:last-child:after { content: "";    }
	.previous .pattern-1 { height: $gutter; }
}

@include media("lg") {
	$gutter: grid-gutter("lg");
	.f1 .snake-2:before { width: 36px; left: -36px; bottom: -12px; height: 120%; min-height: 70px; }
	.previous .pattern-1 { height: $gutter; }
}
/* @end Board */