/* @group Subscription */
.subscription {
	.default-content { padding-left: 34px; }

	fieldset { counter-increment: fieldset; }

	legend::before,
	.legend-before {
		width:  1.5em;
		height: 1.5em;
		border: 1px solid;
		border-radius: 50%;
		margin-right: .5em;

		content: counter(fieldset);

		display: inline-block;
		z-index: 1;

		transition: border-color .3s, color .3s;

		@extend %font-brandon;
		@include font-weight-regular("brandon");
		font-size: 1rem;
		line-height: 1.5;

		text-align: center;
		vertical-align: middle;
	}

	// Prefer manually handling "valid" states for fieldset
	// In this way we can display a fieldset as invalid because a previous one isn't valid
	fieldset.valid legend::before { color: $color-brand; }
	form:valid    .legend-before  { color: $color-brand; }

	.gift {
		@include font-weight-regular("proxima");

		svg {
			width:  26px;
			height: 37px;
			margin-right: .75em;
		}

		p { padding: .25em 0; }
	}

	.summary { border: 1px solid; }

	.legend-before {
		content: "";

		// .legend-before may be inside a <button>
		outline: 0;
		pointer-events: none;

		color: $color-white;

		svg {
			width:  14px;
			height: 14px;
			margin-top: -4px;
		}
	}
}

.plans {
	justify-content: center;

	li {
		background: $color-white;

		width: 254px;
		min-height: 230px;
		border: 1px solid $color-brand;

		display: inline-flex;

		color: $color-main;
	}

	.strong {
		background: $color-brand;
		color:      $color-darker;

		.price,
		.name { color: $color-white; }
	}

	a,
	label {
		padding-bottom: 2.75rem; // See .action
		border: 3px solid $color-white;

		display: block;
		flex: 1;
		position: relative;

		color: inherit; // Avoid default hover/focus on the links

		> span,
		> small {
			padding: 0 .5em;
			margin-bottom: .5em;
			display: block;
			line-height: 1;
		}
	}

	.price,
	.name { color: $color-brand; }

	.price {
		margin: 0;
		position: relative;

		@extend %font-brandon;
		@include font-weight-black("brandon");
		font-size: 3.75rem; // Prefer rem instead of em since font-size is different on mobile and other devices
		line-height: 100px; // Prefer px since the font-size might vary
	}

	> :last-child a {
		background: url(img/jouristes.svg) 50% 35px / 202px 39px no-repeat;
		padding-top: 105px;
	}

	.currency {
		margin-left: .25em;

		position: absolute;
		top: 1.5em;

		font-size: 1.25rem;
		line-height: 1;

		text-align: left;

		span { display: block; }
	}

	.name {
		font-style: italic;
		@include font-weight-bold("archer");
		font-size: 1.25rem;
	}

	.desc,
	small,
	.action {
		@extend %font-proxima;
		font-size: .75rem;
	}

	.desc {
		@include font-weight-extra-bold("proxima");
		text-transform: uppercase;
	}

	small {
		margin-bottom: 1em;
		@include font-weight-semi-bold("proxima");
	}

	input { bottom: 0; }

	.action {
		background: $color-white;

		margin: 0;

		position: absolute;
		right:  0;
		bottom: 0;
		left:   0;

		@include font-weight-bold("proxima");
		font-size: 1rem;
		line-height: 2.75;

		text-transform: uppercase;

		color: $color-brand;

		&::after {
			background: url("data:image/svg+xml;charset=UTF-8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 28 20'><path fill='#{hex-to-rgb($color-white)}' d='M28 2.78L25.22 0 10.748 14.5 2.8 6.5 0 9.3 10.747 20 28 2.78z'/></svg>") 0 / 100%;

			width:  28px;
			height: 20px;
			margin-top:  -10px; // Center vertically
			margin-left: -14px; // Center horizontally

			content: "";

			opacity: 0;
			visibility: hidden;

			position: absolute;
			top:  50%;
			left: 50%;

			transform: scale(3);
		}
	}

	label:hover input:checked + .action,
	input:checked       + .action,
	input:focus:checked + .action {
		background: $color-brand;
		transition: color .3s;
		color:      $color-brand;
	}

	input:checked + .action::after {
		opacity: 1;
		visibility: visible;
		transform: none;
		transition: opacity .3s, visibility 0s, transform .3s cubic-bezier(.18, .89, .32, 1.28);
	}

	a:hover .action,
	a:focus .action,
	label:hover .action,
	input:focus + .action {
		background: $color-brand;
		color:      $color-white;
	}
}

@include media("md") {
	$gutter: grid-gutter("md");
	$margin: grid-margin("md");

	.page-subscription              { overflow: hidden; }
	.page-subscription > .container { height: calc(100% - 85px - #{$margin}); }

	.subscription {
		background:
			url("data:image/svg+xml;charset=UTF-8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2 4'><path d='M1 0h1v1H1zM0 2h1v1H0z'/></svg>") left/2px 4px,
			linear-gradient(to bottom, rgba($color-black, .6), rgba($color-black, .6)),
			url("img/back/subscription.jpg") center/cover;
		color: $color-white;

		.default-content { padding-left: 0; }

		legend::before,
		.legend-before {
			background: $color-black;
			margin-top: -.75em;

			position: absolute;
			top: 50%;
			left: calc(-1.5em - #{$gutter});
		}

		.style-meta-large .legend-before::before {
			background: currentColor;
			width:  1px;
			height: 120px; // Arbitrary

			content: "";
			position: absolute;
			bottom: 100%;
			left:   50%;
		}

		.gift,
		label.style-meta { color: $color-white; }

		.summary {
			background: $color-white;
			border: 0;
		}

		.progress {
			background: $color-white;

			width: 1px;

			position: absolute;
			top:    20px; // Arbitrary
			bottom: 30px; // Arbitrary
			left: calc(-#{$gutter} - .75em);

			font-size: 1rem; // Same as .subscription legend::before (18px)

			div {
				background: $color-brand;
				width: 100%;
				height: 0;
				position: absolute;
				transition: height 1s;
			}
		}
	}

	.plans {
		li {
			width: 238px;
			border: 1px solid $color-white;
		}

		.strong .price { font-size: 5.25rem; }
	}
}

@include media("lg") {
	$gutter: grid-gutter("lg");
	$margin: grid-margin("lg");

	@if $gutter != grid-gutter("md") {
		.subscription {
			legend::before { left: calc(-1.5em - #{$gutter}); }
			.progress      { left: calc(-.75em - #{$gutter}); }
		}
	}

	@if $margin != grid-margin("md") {
		.page-subscription > .container { height: calc(100% - 85px - #{$margin}); }
	}
}
/* @end Subscription */